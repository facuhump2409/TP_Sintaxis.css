void separarLexemas(struct palabra **head, char *nombreArchivo)
{

	int i = 0;
	int j = 0;
	int linea = 1;
	char caracter[3] = "\0";
	char unCaracter[3] = "\0";
	char buffer[LEXEMA_SIZE] = "\0";
	FILE *archivo = fopen(nombreArchivo, "r");
	if (archivo == NULL)
	{
		printf("No se pudo abrir el archivo\n");
		return 0;
	}
	unCaracter[0] = getc(archivo); //leo el primer caracter y despues me fijo que es
	do
	{
		if (isalpha(unCaracter[0]) || isdigit(unCaracter[0]) || unCaracter[0] == '_' || unCaracter[0] == '.')
		{
			do
			{
				buffer[i] = unCaracter[0];
				i++;
				unCaracter[0] = getc(archivo);
			} while ((isalpha(unCaracter[0]) || isdigit(unCaracter[0]) || unCaracter[0] == '_' || unCaracter[0] == '.')&& unCaracter[0]!=EOF);
			i = 0;
			agregarPalabraAlFinal(&(*head), buffer, linea);
		}
		//strcpy (buffer, caracter);
		if (isspace(unCaracter[0]) == 0)
		{
			if (unCaracter[0] == '%' || unCaracter[0] == '\\' || unCaracter[0] == '/')
			{
				unCaracter[1] = getc(archivo);
				agregarPalabraAlFinal(&(*head), unCaracter, linea);
				if (strcmp(unCaracter, "//") == 0)
				{
					caracter[0] = getc(archivo);
					while (caracter[0] != '\n' && caracter[0]!=EOF)
					{
						for (j = 0; j<LEXEMA_SIZE; j++) { buffer[j] = '\0'; }
						if((isalpha(caracter[0]) || isdigit(caracter[0]) || caracter[0] == '_' || caracter[0] == '.' || isspace(caracter[0]) == 0)&& caracter[0]!=EOF){
						do
						{
							buffer[i] = caracter[0];
							i++;
							caracter[0] = getc(archivo);
						}while ((isalpha(caracter[0]) || isdigit(caracter[0]) || caracter[0] == '_' || caracter[0] == '.' || isspace(caracter[0]) == 0)&& caracter[0]!=EOF);
						}
						if(strcmp(buffer,"")) {agregarPalabraAlFinal(&(*head), buffer, linea);}
						//if (caracter[0] == '\n') { linea++; }
						if (i == 0) { caracter[0] = getc(archivo); }
						i = 0;
						//if (isspace(buffer[0]) == 0) agregarPalabraAlFinal(&(*head), buffer, linea);
						//if (caracter[0] == '\n') { agregarPalabraAlFinal(&(*head), caracter,linea); }

					}
					if (caracter[0] == '\n') {
						agregarPalabraAlFinal(&(*head), caracter, linea);
						linea++;
					}
					//agregarPalabraAlFinal(&(*head),caracter);
				}
				else if (strcmp(unCaracter, "/*") == 0)
				{
					caracter[0] = getc(archivo);
					while (caracter[0] != '*' && caracter[0]!=EOF)
					{
						for (j = 0; j<LEXEMA_SIZE; j++) { buffer[j] = '\0'; }
						if (((isalpha(caracter[0]) || isdigit(caracter[0]) || caracter[0] == '_' || caracter[0] == '.' || isspace(caracter[0]) == 0) && caracter[0]!=EOF && caracter[0]!='*')){
						do
						{
							buffer[i] = caracter[0];
							i++;
							caracter[0] = getc(archivo);
						} while ((isalpha(caracter[0]) || isdigit(caracter[0]) || caracter[0] == '_' || caracter[0] == '.' || isspace(caracter[0]) == 0) && caracter[0]!=EOF && caracter[0]!='*');
						}
						if(strcmp(buffer,"")) {agregarPalabraAlFinal(&(*head), buffer, linea);}
						if (caracter[0] == '\n') { linea++; }
						if (i == 0 || isspace(caracter[0])) { caracter[0] = getc(archivo); }
						i = 0;
						//if (buffer[0] != "") agregarPalabraAlFinal(&(*head), buffer, linea);
						//if (caracter[0] == '\n') { agregarPalabraAlFinal(&(*head), caracter,linea); }

					}
					caracter[1] = getc(archivo);
					if (strcmp(caracter, "*/")==0) {

						agregarPalabraAlFinal(&(*head), caracter, linea);
						//linea++;
					}
				}
				caracter[1] = '\0';
				unCaracter[1] = '\0';
			}
			else { agregarPalabraAlFinal(&(*head), unCaracter, linea); }
			unCaracter [1] = '\0';
		}
		if (unCaracter[0] == '\n') { linea++; }
		for (j = 0; j<LEXEMA_SIZE; j++)buffer[j] = '\0';

		unCaracter[0] = getc(archivo);
	} while (unCaracter[0] != EOF);
	fclose(archivo);
}
