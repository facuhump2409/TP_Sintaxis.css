void separarLexemas(struct palabra **head, char *nombreArchivo)
{

	int i = 0;
	char casoEspecial;
	int j = 0;
	int linea = 1;
	char caracterEspecial[3] = "\0";
	char unCaracter[3] = "\0";
	char buffer[LEXEMA_SIZE] = "\0";
	FILE *archivo = fopen(nombreArchivo, "r");
	if (archivo == NULL)
	{
		printf("No se pudo abrir el archivo\n");
		return 0;
	}
	unCaracter[0] = getc(archivo); //leo el primer caracter y despues me fijo que es
	do
	{

		if (isalpha(unCaracter[0]) || isdigit(unCaracter[0]) || unCaracter[0] == '_' || unCaracter[0] == '.')
		{
			do
			{
				buffer[i] = unCaracter[0];
				i++;
				unCaracter[0] = getc(archivo);
			} while ((isalpha(unCaracter[0]) || isdigit(unCaracter[0]) || unCaracter[0] == '_' || unCaracter[0] == '.')&& unCaracter[0]!=EOF);
			i = 0;
			agregarPalabraAlFinal(&(*head), buffer, linea);
		}
		//strcpy (buffer, caracter);
		if (isspace(unCaracter[0]) == 0)
		{
			if(unCaracter[0]== '&' || unCaracter[0] == '/')
		{
			casoEspecial = getc(archivo);
			if(casoEspecial == '&' && unCaracter[0] == '&')
			{
				buffer[0] = unCaracter[0];
				buffer[1] = casoEspecial;
				agregarPalabraAlFinal(&(*head), buffer, linea);
				unCaracter[0] = getc(archivo);
				if(isspace(unCaracter[0])) {unCaracter[0] =getc(archivo);} // si entra aca despues se tiene que avanzar un caracter
				for (j = 0; j<LEXEMA_SIZE; j++) { buffer[j] = '\0'; } //limpias el buffer
			}
			else if (isdigit(casoEspecial)|| isspace(casoEspecial))//((casoEspecial != '/' || casoEspecial != '*')&& unCaracter[0] == '/')
			{
				agregarPalabraAlFinal(&(*head), unCaracter, linea); //agrego el dividido solo
				ungetc(casoEspecial,archivo); // devolves igual lo que venga despues del dividido para que se trabaje
				unCaracter[0] = getc(archivo); // avanzas
				if(isspace(unCaracter[0])) {unCaracter[0] =getc(archivo);}
			}
			else {ungetc(casoEspecial,archivo);} // en otro caso devolves el caracter al stream.
		}
			if (unCaracter[0] == '%' || unCaracter[0] == '\\' || unCaracter[0] == '/' || unCaracter[0]=='|')
			{
				unCaracter[1] = getc(archivo);
				agregarPalabraAlFinal(&(*head), unCaracter, linea);
				if (strcmp(unCaracter, "//") == 0)
				{
					caracterEspecial[0] = getc(archivo);
					while (caracterEspecial[0] != '\n' && caracterEspecial[0]!=EOF)
					{
						for (j = 0; j<LEXEMA_SIZE; j++) { buffer[j] = '\0'; }
						if((isalpha(caracterEspecial[0]) || isdigit(caracterEspecial[0]) || caracterEspecial[0] == '_' || caracterEspecial[0] == '.' || isspace(caracterEspecial[0]) == 0)&& caracterEspecial[0]!=EOF){
						do
						{
							buffer[i] = caracterEspecial[0];
							i++;
							caracterEspecial[0] = getc(archivo);
						}while ((isalpha(caracterEspecial[0]) || isdigit(caracterEspecial[0]) || caracterEspecial[0] == '_' || caracterEspecial[0] == '.' || isspace(caracterEspecial[0]) == 0)&& caracterEspecial[0]!=EOF);
						}
						if(strcmp(buffer,"")) {agregarPalabraAlFinal(&(*head), buffer, linea);}
						//if (caracterEspecial[0] == '\n') { linea++; }
						if (i == 0) { caracterEspecial[0] = getc(archivo); }
						i = 0;
						//if (isspace(buffer[0]) == 0) agregarPalabraAlFinal(&(*head), buffer, linea);
						//if (caracterEspecial[0] == '\n') { agregarPalabraAlFinal(&(*head), caracterEspecial,linea); }

					}
					if (caracterEspecial[0] == '\n') {
						agregarPalabraAlFinal(&(*head), caracterEspecial, linea);
						linea++;
					}
					//agregarPalabraAlFinal(&(*head),caracterEspecial);
				}
				else if (strcmp(unCaracter, "/*") == 0)
				{
					caracterEspecial[0] = getc(archivo);
					while (caracterEspecial[0] != '*' && caracterEspecial[0]!=EOF)
					{
						for (j = 0; j<LEXEMA_SIZE; j++) { buffer[j] = '\0'; }
						if (((isalpha(caracterEspecial[0]) || isdigit(caracterEspecial[0]) || caracterEspecial[0] == '_' || caracterEspecial[0] == '.' || isspace(caracterEspecial[0]) == 0) && caracterEspecial[0]!=EOF && caracterEspecial[0]!='*')){
						do
						{
							buffer[i] = caracterEspecial[0];
							i++;
							caracterEspecial[0] = getc(archivo);
						} while ((isalpha(caracterEspecial[0]) || isdigit(caracterEspecial[0]) || caracterEspecial[0] == '_' || caracterEspecial[0] == '.' || isspace(caracterEspecial[0]) == 0) && caracterEspecial[0]!=EOF && caracterEspecial[0]!='*');
						}
						if(strcmp(buffer,"")) {agregarPalabraAlFinal(&(*head), buffer, linea);}
						if (caracterEspecial[0] == '\n') { linea++; }
						if (i == 0 || isspace(caracterEspecial[0])) { caracterEspecial[0] = getc(archivo); }
						i = 0;
						//if (buffer[0] != "") agregarPalabraAlFinal(&(*head), buffer, linea);
						//if (caracterEspecial[0] == '\n') { agregarPalabraAlFinal(&(*head), caracterEspecial,linea); }

					}
					caracterEspecial[1] = getc(archivo);
					if (strcmp(caracterEspecial, "*/")==0) {

						agregarPalabraAlFinal(&(*head), caracterEspecial, linea);
						//linea++;
					}
				}
				caracterEspecial[1] = '\0';
				unCaracter[1] = '\0';
			}
			else {agregarPalabraAlFinal(&(*head), unCaracter, linea);}
			unCaracter [1] = '\0';
		}
		if (unCaracter[0] == '\n') { linea++; }
		for (j = 0; j<LEXEMA_SIZE; j++)buffer[j] = '\0';

		unCaracter[0] = getc(archivo);
	} while (unCaracter[0] != EOF);
	fclose(archivo);
}
